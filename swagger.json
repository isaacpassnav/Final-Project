{
  "swagger": "2.0",
  "info": {
    "title": "Hospital Appointment Management API",
    "description": "Hospital Appointment Management API",
    "version": "1.0.0"
  },
  "host": "final-project-zx8v.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api-docs": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/doctors/": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Display all Doctors",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Create Doctor",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Daniel"
                },
                "lastName": {
                  "example": "Smith"
                },
                "email": {
                  "example": "doctorDanielSmith@hospital.com"
                },
                "phone": {
                  "example": "+1234567890"
                },  
                "gender": {
                  "enum": ["male", "female", "other"],
                  "example": "male"
                },
                "specialty": {
                  "example": "685097f8c9963779c87036bf"
                },
                "hospital": {
                  "example": "68509868c9963779c87036c1"
                }
              }
            }
          }
        ],
         "responses": {
          "201": {
            "description": "New doctor created successfuly",
            "content": {
              "application/json": {
                "example": {
                  "message": "New doctor created successfuly"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Please log in with GitHub.",
            "content": {
              "application/json": {
                "example": {
                  "message": "ðŸš« Unauthorized: Please log in with GitHub."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden"
                }
              }
            }
          },
          "409": {
            "description": "Conflict: Duplicate fields found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Duplicate fields found"
                }
              }
            }
          },
          "422": {
            "description": "Data Validation Failed",
            "content": {
              "application/json": {
                "example": {
                  "message": "Data Validation Failed"
                }
              }
            }
          },
          "500": {
            "description": "Error creating new doctor | Server error while checking duplicates",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error during authentication"
                }
              }
            }
          }
        }
      }
    },
    "/doctors/{id}": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Display Doctor by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Doctors"
        ],
        "summary": "Update a Doctor",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Daniel"
                },
                "lastName": {
                  "example": "Smith"
                },
                "email": {
                  "example": "doctorDanielSmith@hospital.com"
                },
                "phone": {
                  "example": "+1234567890"
                },
                "gender": {
                  "enum": ["male", "female", "other"],
                  "example": "male"
                },
                "specialty": {
                  "example": "685097f8c9963779c87036bf"
                },
                "hospital": {
                  "example": "68509868c9963779c87036c1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Doctor updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Doctor not found or no changes made."
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Doctors"
        ],
        "summary": "Delete Doctor by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/doctors/specialty/{id}": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Get Docotr by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/specialties/": {
      "get": {
        "tags": [
          "Specialities"
        ],
        "summary": "Display all Specialities",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Specialities"
        ],
        "summary": "Create Speciality",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Neurology"
                },
                "description": {
                  "example": "Specializes in the diagnosis, treatment, and study of disorders affecting the nervous system"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Specialty created successfuly"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/specialties/{id}": {
      "get": {
        "tags": [
          "Specialities"
        ],
        "summary": "Display Speciality by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Specialities"
        ],
        "summary": "Update Specialty by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Neurology"
                },
                "description": {
                  "example": "Specializes in the diagnosis, treatment, and study of disorders affecting the nervous system and brain"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specialty updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Specialty not found or no changes made."
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Specialities"
        ],
        "summary": "Delete Speciality by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hospital/": {
      "get": {
        "tags": [
          "Hospitals"
        ],
        "summary": "Display all Hospitals",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Hospitals"
        ],
        "summary": "Create Hospital",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "General Seattle Hospital"
                },
                "address": {
                  "example": "134 Main St, Springfield, USA"
                },
                "phone": {
                  "example": "+1234567890"
                },
                "website": {
                  "example": "https://saintluke.org"
                },
                "capacity": {
                  "example": "40"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hospital created succesfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Hospital with same name already exists"
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hospital/{id}": {
      "get": {
        "tags": [
          "Hospitals"
        ],
        "summary": "Display Hospital by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Hospitals"
        ],
        "summary": "Update Hospital by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "General Seattle Hospital"
                },
                "address": {
                  "example": "134 Main St, Springfield, USA"
                },
                "phone": {
                  "example": "+1234567890"
                },
                "website": {
                  "example": "https://saintluke.org"
                },
                "capacity": {
                  "example": "400"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hospital Updated succesfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Hospital not found or no changes made."
          },
          "422": {
            "description": "Data Validation Failed"
          }, 
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Hospitals"
        ],
        "summary": "Delete Hospital by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fullName": {
                  "example": "Andrea Ramos"
                },
                "email": {
                  "example": "andrearamos@admin.com"
                },
                "password": {
                  "type":"string",
                  "example": "strongpassword123"
                },
                "role": {
                  "example": "admin"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered/created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login with GitHub OAuth",
        "description": "Authenticates the user using GitHub OAuth and returns user information if successful.",
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authentication successful",
                  "user": "Andrea Ramos"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed. User not logged in.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authentication failed. User not logged in."
                }
              }
            }
          },
          "422": {
            "description": "Login data validation failed.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Login data validation failed"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during authentication",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error during authentication",
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout authenticated user",
        "description": "Destroys the user session and logs them out.",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "Logout successful",
                  "user": "Andrea Ramos"
                }
              }
            }
          },
          "400": {
            "description": "Logout failed, user still authenticated",
            "content": {
              "application/json": {
                "example": {
                  "message": "Logout failed, user still authenticated"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error during logout",
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to log out the user | Failed to destroy the session"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Display all users",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Display user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fullName": {
                  "example": "Daniel Mhulestein"
                },
                "email": {
                  "example": "danielM@patient.com"
                },
                "password": {
                  "type":"string",
                  "example": "strongpassword123"
                },
                "role": {
                  "example": "patient"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found or no changes made."
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Update failed, system error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/appointments/": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get All Appointments",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Create an Appointment",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "patient": {
                  "example": "6091f2f4c65bc0205299bfed"
                },
                "doctor": {
                  "example": "6851f2f4c65bc9505299bfed"
                },
                "hospital": {
                  "example": "6851g7g4c65bc0205299bfed"
                },
                "date": {
                  "example": "2023-10-01T10:00:00Z"
                },
                "reason": {
                  "example": "Headache"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New Appointment created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/appointments/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get an Appointment by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Appointments"
        ],
        "summary": "Update an Appointment",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "patient": {
                  "example": "iub5t874ghb38iye823g5"
                },
                "doctor": {
                  "example": "ub4r8p73g48r73gbrpi32y"
                },
                "hospital": {
                  "example": "hb849u3r8fhewifb3847rbf"
                },
                "date": {
                  "example": "2023-10-01"
                },
                "reason": {
                  "example": "Muscular pain"
                },
                "status": {
                  "example": "[pending, confirmed, cancelled]"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Appointment not found or no changes made."
          },
          "422": {
            "description": "Data Validation Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Appointments"
        ],
        "summary": "Delete an Appointment by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/appointments/user/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get an Appointment by User ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/appointments/doctor/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get an Appointment by Doctor ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}